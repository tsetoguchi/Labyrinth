(testing /course/cs4500f22/ta/github/recursive-koodotk/5/xchoice)
(testing /course/cs4500f22/ta/github/5/63/Tests/0-in.json /course/cs4500f22/ta/github/5/63/Tests/0-out.json)
(testing /course/cs4500f22/ta/github/5/63/Tests/1-in.json /course/cs4500f22/ta/github/5/63/Tests/1-out.json)
Exception in thread "main" java.lang.IllegalArgumentException: Duplicate player colors are not allowed.
	at game.model.Game.<init>(Game.java:69)
	at game.model.Game.<init>(Game.java:97)
	at game.it.processing.MazeJsonParser.getGame(MazeJsonParser.java:82)
	at game.it.StrategyIntegrationTest.executeTest(StrategyIntegrationTest.java:27)
	at game.it.TestRunner.main(TestRunner.java:22)
---------------------------------
(*** score 0)
(*** on)
'("Euclid"
  #hasheq((board
           .
           #hasheq((connectors
                    .
                    (("│" "│" "│" "│" "│" "│" "│")
                     ("│" "│" "│" "│" "│" "│" "│")
                     ("│" "│" "│" "│" "│" "│" "│")
                     ("│" "│" "│" "│" "│" "│" "│")
                     ("│" "│" "│" "│" "│" "│" "│")
                     ("│" "│" "│" "│" "│" "│" "│")
                     ("┘" "└" "┘" "└" "┘" "└" "┘")))
                   (treasures
                    .
                    ((("aventurine" "pink-emerald-cut")
                      ("aventurine" "pink-opal")
                      ("aventurine" "pink-round")
                      ("aventurine" "pink-spinel-cushion")
                      ("aventurine" "purple-cabochon")
                      ("aventurine" "purple-oval")
                      ("aventurine" "purple-spinel-trillion"))
                     (("azurite" "pink-emerald-cut")
                      ("azurite" "pink-opal")
                      ("azurite" "pink-round")
                      ("azurite" "pink-spinel-cushion")
                      ("azurite" "purple-cabochon")
                      ("azurite" "purple-oval")
                      ("azurite" "purple-spinel-trillion"))
                     (("beryl" "pink-emerald-cut")
                      ("beryl" "pink-opal")
                      ("beryl" "pink-round")
                      ("beryl" "pink-spinel-cushion")
                      ("beryl" "purple-cabochon")
                      ("beryl" "purple-oval")
                      ("beryl" "purple-spinel-trillion"))
                     (("carnelian" "pink-emerald-cut")
                      ("carnelian" "pink-opal")
                      ("carnelian" "pink-round")
                      ("carnelian" "pink-spinel-cushion")
                      ("carnelian" "purple-cabochon")
                      ("carnelian" "purple-oval")
                      ("carnelian" "purple-spinel-trillion"))
                     (("chrysolite" "pink-emerald-cut")
                      ("chrysolite" "pink-opal")
                      ("chrysolite" "pink-round")
                      ("chrysolite" "pink-spinel-cushion")
                      ("chrysolite" "purple-cabochon")
                      ("chrysolite" "purple-oval")
                      ("chrysolite" "purple-spinel-trillion"))
                     (("citrine" "pink-emerald-cut")
                      ("citrine" "pink-opal")
                      ("citrine" "pink-round")
                      ("citrine" "pink-spinel-cushion")
                      ("citrine" "purple-cabochon")
                      ("citrine" "purple-oval")
                      ("citrine" "purple-spinel-trillion"))
                     (("clinohumite" "pink-emerald-cut")
                      ("clinohumite" "pink-opal")
                      ("clinohumite" "pink-round")
                      ("clinohumite" "pink-spinel-cushion")
                      ("clinohumite" "purple-cabochon")
                      ("clinohumite" "purple-oval")
                      ("clinohumite" "purple-spinel-trillion"))))))
          (last . (4 "RIGHT"))
          (plmt
           .
           (#hasheq((color . "red")
                    (current . #hasheq((column# . 5) (row# . 1)))
                    (home . #hasheq((column# . 3) (row# . 3))))
            #hasheq((color . "orange")
                    (current . #hasheq((column# . 0) (row# . 1)))
                    (home . #hasheq((column# . 1) (row# . 3))))
            #hasheq((color . "yellow")
                    (current . #hasheq((column# . 2) (row# . 2)))
                    (home . #hasheq((column# . 1) (row# . 1))))
            #hasheq((color . "green")
                    (current . #hasheq((column# . 3) (row# . 6)))
                    (home . #hasheq((column# . 5) (row# . 5))))
            #hasheq((color . "blue")
                    (current . #hasheq((column# . 3) (row# . 4)))
                    (home . #hasheq((column# . 1) (row# . 5))))
            #hasheq((color . "purple")
                    (current . #hasheq((column# . 3) (row# . 2)))
                    (home . #hasheq((column# . 3) (row# . 5))))))
          (spare
           .
           #hasheq((1-image . "citrine")
                   (2-image . "citrine")
                   (tilekey . "└"))))
  #hasheq((column# . 3) (row# . 3)))
(*** expected)
'((6 "LEFT" 0 #hasheq((column# . 4) (row# . 3))))
(*** but received)
'(((plain fast with-newline plain-unicode) ()))


(testing /course/cs4500f22/ta/github/5/63/Tests/2-in.json /course/cs4500f22/ta/github/5/63/Tests/2-out.json)
((/course/cs4500f22/ta/github/5/63/Tests/0-in.json /course/cs4500f22/ta/github/5/63/Tests/0-out.json) (/course/cs4500f22/ta/github/5/63/Tests/2-in.json /course/cs4500f22/ta/github/5/63/Tests/2-out.json))
((passed 2) (total 3) (partial-score 2))

